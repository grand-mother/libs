{"lines": {"blank": 117, "comment": 9, "docstring": 172, "code": 288}, "pep8": {"count": 27, "categories": [["1", "E128", "continuation line under-indented for visual indent"], ["4", "E211", "whitespace before '('"], ["12", "E251", "unexpected spaces around keyword / parameter equals"], ["1", "E302", "expected 2 blank lines, found 1"], ["6", "E303", "too many blank lines (2)"], ["1", "E305", "expected 2 blank lines after class or function definition, found 1"], ["1", "E501", "line too long (80 > 79 characters)"], ["1", "W293", "blank line contains whitespace"]]}, "doc": {"statistics": {"shared_libs/turtle.py": {"tokens": {"LIBHASH": [40, ["Missing description"]]}, "n_errors": 1, "n_tokens": 5}, "shared_libs/tools.py": {"tokens": {"Temporary": [33, ["Undocumented parameter `url`", "Undocumented parameter `tag`"]], "Meta.__init__": [59, ["Undocumented parameter `name`", "Missing description"]], "Meta.__getitem__": [69, ["Undocumented parameter `k`", "Missing description"]], "Meta.__setitem__": [75, ["Undocumented parameter `k`", "Missing description", "Undocumented parameter `v`"]], "Meta.update": [78, ["Missing description"]], "Installer": [86, ["Undocumented parameter `installs`"]], "define": [99, ["Undocumented parameter `result`", "Undocumented parameter `arguments`", "Undocumented parameter `source`", "Undocumented parameter `exception`"]]}, "n_errors": 15, "n_tokens": 21}, "shared_libs/gull/__init__.py": {"tokens": {"LIBHASH": [34, ["Missing description"]]}, "n_errors": 1, "n_tokens": 1}, "shared_libs/gull/binding.py": {"tokens": {"_snapshot_create": [74, ["Undocumented parameter `path`", "Undocumented parameter `line`", "Undocumented parameter `month`", "Undocumented parameter `year`", "Undocumented parameter `day`", "Undocumented parameter `snapshot`"]], "_snapshot_destroy": [85, ["Undocumented parameter `snapshot`"]], "_snapshot_field": [95, ["Undocumented parameter `longitude`", "Undocumented parameter `latitude`", "Undocumented parameter `snapshot`", "Undocumented parameter `field`", "Undocumented parameter `altitude`"]], "_snapshot_info": [106, ["Undocumented parameter `snapshot`"]], "Snapshot.__del__": [164, ["Missing description"]], "Snapshot.__call__": [176, ["Undocumented parameter `longitude`", "Undocumented parameter `latitude`", "Undocumented parameter `altitude`"]]}, "n_errors": 17, "n_tokens": 30}}, "doc": "Manage shared libs for GRAND packages", "classes": {}, "definitions": {"DATADIR": [35, "Path to the package data", null], "LIBDIR": [38, "Path to the package shared libraries", null], "SRCDIR": [41, "Path to the source for C-extensions", null]}, "functions": {}, "imports": {}, "path": "shared_libs/__init__.py", "__all__": ["LIBDIR", "DATADIR"], "modules": {"turtle": {"doc": "Encapsulation of the TURTLE library", "classes": {}, "definitions": {"LIBNAME": [34, "The full path to the TURTLE library object", null], "LIBPATH": [37, "The git hash of the library", null], "LIBHASH": [40, "", null]}, "functions": {"get": [46, "Get the ctypes handle for the TURTLE library", {"parameters": {}, "prototype": ""}], "install": [56, "Install the TURTLE library to the GRAND software", {"parameters": {}, "prototype": ""}]}, "imports": {}, "path": "shared_libs/turtle.py", "__all__": ["LIBNAME", "LIBPATH", "LIBHASH", "install", "get"]}, "tools": {"doc": "Utilities for encapsulating shared libraries", "classes": {"Meta": [56, "Encapsulation of library meta data", {"attributes": {}, "methods": {"__init__": [59, "", {"parameters": {"name": null}, "prototype": "self, name"}], "__getitem__": [69, "", {"parameters": {"k": null}, "prototype": "self, k"}], "__setitem__": [75, "", {"parameters": {"k": null, "v": null}, "prototype": "self, k, v"}], "update": [78, "", {"parameters": {}, "prototype": "self"}]}, "bases": []}]}, "definitions": {}, "functions": {"Temporary": [33, "Temporary context for building a shared library", {"parameters": {"url": null, "tag": null}, "prototype": "url, tag=None"}], "Installer": [86, "Create an extended installer class", {"parameters": {"installs": null}, "prototype": "installs"}], "define": [99, "Decorator for defining wrapped library functions", {"parameters": {"source": null, "arguments": null, "result": null, "exception": null}, "prototype": "source, arguments=None, result=None, exception=None"}]}, "imports": {}, "path": "shared_libs/tools.py", "__all__": ["Installer", "Meta", "Temporary"]}, "gull": {"doc": "Encapsulation of the GULL C library", "classes": {}, "definitions": {"LIBNAME": [28, "The full path to the GULL library object", null], "LIBPATH": [31, "The git hash of the library", null], "LIBHASH": [34, "", null]}, "functions": {}, "imports": {"2": {"": [["LIBDIR", "LIBDIR"]]}}, "path": "shared_libs/gull/__init__.py", "__all__": ["LIBNAME", "LIBPATH", "LIBHASH"], "modules": {"binding": {"doc": "Python binding for the GULL library", "classes": {"LibraryError": [53, "A GULL library error", {"attributes": {}, "methods": {"__init__": [56, "Set a GULL library error\n", {"parameters": {"code": ["int", "The function return code"]}, "prototype": "self, code"}]}, "bases": ["Exception"]}], "Snapshot": [115, "Proxy for a GULL snapshot object", {"attributes": {}, "methods": {"__init__": [118, "Create a snapshot of the geo-magnetic field\n", {"parameters": {"model": ["str", "The geo-magnetic model to use (IGRF12, or WMM2015)"], "date": ["str or datetime.date", "The day at which the snapshot is taken"]}, "prototype": "self, model='IGRF12', date='2019-01-01'", "raises": [["LibraryError", "A GULL library error occured, e.g. if the model parameters are not"]]}], "__del__": [164, "", {"parameters": {}, "prototype": "self"}], "__call__": [176, "Get the magnetic field at a given Earth location", {"parameters": {"latitude": null, "longitude": null, "altitude": null}, "prototype": "self, latitude, longitude, altitude=None"}], "altitude": [206, "The altitude range of the snapshot", {"parameters": {}, "prototype": "self"}], "date": [212, "The date of the snapshot", {"parameters": {}, "prototype": "self"}], "model": [218, "The world magnetic model", {"parameters": {}, "prototype": "self"}], "order": [224, "The approximation order of the model", {"parameters": {}, "prototype": "self"}]}, "bases": []}]}, "definitions": {}, "functions": {"strerror": [34, "Convert a GULL library return code to a string\n", {"parameters": {"code": ["int", "The function return code"]}, "prototype": "code", "returns": [["str", "A string describing the error type", ""]]}]}, "imports": {}, "path": "shared_libs/gull/binding.py", "__all__": ["LibraryError", "Snapshot", "strerror"]}, "install": {"doc": "Installer for the GULL library", "classes": {}, "definitions": {}, "functions": {"install": [32, "Install the GULL library to the top package location", {"parameters": {}, "prototype": ""}]}, "imports": {}, "path": "shared_libs/gull/install.py", "__all__": ["install"]}}}}}}